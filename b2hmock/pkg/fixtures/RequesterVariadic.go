// Code generated by B2H-MockGen v0.0.0-dev. EDIT AT YOUR OWN PERIL.

package b2hmock

import (
	io "io"

	mock "github.com/stretchr/testify/mock"
)

type RequesterVariadicMock struct {
	mock.Mock
}

func (_m *RequesterVariadicMock) Get(values ...string) bool {
	_va := make([]interface{}, len(values))
	for _i := range values {
		_va[_i] = values[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, _va...)
	args := _m.Called(_ca...)
	return args.Get(0).(bool)
}
func (_m *RequesterVariadicMock) MultiWriteToFile(filename string, w ...io.Writer) string {
	_va := make([]interface{}, len(w))
	for _i := range w {
		_va[_i] = w[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, filename)
	_ca = append(_ca, _va...)
	args := _m.Called(_ca...)
	return args.Get(0).(string)
}
func (_m *RequesterVariadicMock) OneInterface(a ...interface{}) bool {
	var _ca []interface{}
	_ca = append(_ca, a...)
	args := _m.Called(_ca...)
	return args.Get(0).(bool)
}
func (_m *RequesterVariadicMock) Sprintf(format string, a ...interface{}) string {
	var _ca []interface{}
	_ca = append(_ca, format)
	_ca = append(_ca, a...)
	args := _m.Called(_ca...)
	return args.Get(0).(string)
}
